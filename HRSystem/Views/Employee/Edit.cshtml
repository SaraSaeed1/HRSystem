@model HRSystem.Entity.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<!-- Start Navbar-->
<nav class="d-flex justify-content-between m-4 p-1">
    <div class="d-flex">
        <a href="/Admin/EditEmployee/@Model.Id"><h4 class="font-weight-bolder mt-3 mb-3 text-primary">Edit @Model.Name Employee</h4></a>
    </div>
</nav>
<!--End Navbar  -->
@*<div class="form-group">
        @Html.LabelFor(model => model.Role_Id, "Role_Id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Role_Id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Role_Id, "", new { @class = "text-danger" })
        </div>
    </div>*@

@*<div class="form-group">
        @Html.LabelFor(model => model.Department_id, "Department_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Department_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Department_id, "", new { @class = "text-danger" })
        </div>
    </div>*@

@*<div class="form-group">
        @Html.LabelFor(model => model.Experience_id, "Experience_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Experience_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Experience_id, "", new { @class = "text-danger" })
        </div>
    </div>*@

<main class="main-content">
    <div class="page-header align-items-start min-vh-75 pt-3 pb-3 m-3 border-radius-lg" style="background-image: url('../../Content/assets/img/curved-images/curved-8.jpg');">
        <span class="mask bg-gradient-dark opacity-6"></span>
        <div class="container mt-3">
            <div class="col-8 mx-auto">
                <div class="card z-index-0">
                    <div class="card-header text-center pt-4">
                        <h5>Edit @Model.Name </h5>

                    </div>

                    <div class="card-body">
                        @if (ViewBag.SuccessMessage != null)
                        {
                            <div class=" d-flex justify-content-center">
                                <div class="col-6 alert alert-success alert-dismissable">
                                    <strong>ViewBag.SuccessMessage </strong>
                                </div>
                            </div>
                        }
                        @if (ViewBag.ErrorMessage != null)
                        {
                            <div class=" d-flex justify-content-center">
                                <div class="col-6 alert alert-danger alert-dismissable">
                                    <strong>ViewBag.ErrorMessage </strong>
                                </div>
                            </div>
                        }
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <br />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)
                            <div class="form-outline form-white mb-4">
                                @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-outline form-white mb-4">
                                @Html.LabelFor(model => model.UserName, "UserName", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-outline form-white mb-4">
                                @Html.LabelFor(model => model.Password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-outline form-white mb-4">
                                    @Html.LabelFor(model => model.Salary, "Salary", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col">
                                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Department_id, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(x => x.Department_id, new SelectList(ViewBag.department, "Id", "Name"), "Choose department", new { htmlAttributes = new { @class = "form-control disabled" } })

                                        @Html.ValidationMessageFor(model => model.Department_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Role, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(x => x.Role_Id, new SelectList(ViewBag.role, "Id", "Name"), "Choose role", new { htmlAttributes = new { @class = "form-control disabled" } })

                                        @Html.ValidationMessageFor(model => model.Role_Id, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                            <div class="row d-flex justify-content-evenly">
                                <a href="/User/Profile" class="btn btn-outline-primary  w-40 my-4 mb-2"> Cancel</a>
                                <button type="submit" class=" btn btn-outline-info w-40 my-4 mb-2">Edit</button>
                                @*<button type="submit" class=" btn bg-gradient-faded-info-vertical w-40 my-4 mb-2">Cancel</button>*@
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

